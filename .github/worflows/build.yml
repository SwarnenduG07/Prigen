name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:15-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: secureshare
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    # Checkout Code
    - name: Checkout code
      uses: actions/checkout@v3

    # Backend: Build and Test
    - name: Build and Test Backend
      working-directory: ./file-share-rust-backend
      run: |
        cargo build --release
        sqlx migrate run
        cargo test

    # Frontend: Build and Test
    - name: Build and Test Frontend
      working-directory: ./frontend
      run: |
        npm install --lagacy-peer-deps
        npm run build
        npm run test

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Build and Push Docker Images
      uses: docker/build-push-action@v4
      with:
        push: true
        tags: |
          ghcr.io/<your-username>/frontend:latest
          ghcr.io/<your-username>/backend:latest
        context: .
        file: |
          ./Dockerfile.frontend
          ./Dockerfile.backend

    - name: Deploy to Server
      run: |
        ssh user@your-server "docker-compose down && docker-compose pull && docker-compose up -d"
